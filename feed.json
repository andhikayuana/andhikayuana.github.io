{
    "version": "https://jsonfeed.org/version/1",
    "title": "yuana.id",
    "description": "",
    "home_page_url": "https://yuana.id",
    "feed_url": "https://yuana.id/feed.json",
    "user_comment": "",
    "author": {
        "name": "andhikayuana"
    },
    "items": [
        {
            "id": "https://yuana.id/tutorial-membuat-php-package-sendiri-bagian-1/",
            "url": "https://yuana.id/tutorial-membuat-php-package-sendiri-bagian-1/",
            "title": "Tutorial - Membuat PHP Package sendiri [bagian 1]",
            "summary": "Tutorial - Membuat PHP Package sendiriApa itu PHP Package ?Anda pernah menggunakan PHP framework ? misalnya menggunakan Laravel atau Yii, pasti Anda pernah menjalankan perintah seperti berikut, misal untuk menambahkan suatu pustaka dari Facebook SDK : composer require facebook/graph-sdkatau menambahkan menambahkan pustaka untuk pengolahan waktu&hellip;",
            "content_html": "<h1 id=\"mcetoc_1dd2rt2d20\">Tutorial - Membuat PHP Package sendiri</h1>\n<h2 id=\"mcetoc_1dd2rt2d31\">Apa itu PHP Package ?</h2>\nAnda pernah menggunakan PHP <i>framework</i> ? misalnya menggunakan <a href=\"https://laravel.com/\">Laravel</a> atau <a href=\"https://www.yiiframework.com/\">Yii</a>, pasti Anda pernah menjalankan perintah seperti berikut, misal untuk menambahkan suatu pustaka dari Facebook SDK :<br>\n<pre><code>composer require facebook/graph-sdk</code></pre>\natau menambahkan menambahkan pustaka untuk pengolahan waktu dari <a href=\"https://packagist.org/packages/nesbot/carbon\"><i><strong>nesbot/carbon</strong></i></a><br>\n<pre><code>composer </code><code>require</code><code> nesbot/carbon</code></pre>\nSecara sederhana perintah di atas bisa diartikan untuk mengunduh PHP<i> Package</i> ke dalam direktori dan dapat digunakan di lingkungan proyek kita bekerja. <br> <br>\n<blockquote><i>Jadi, PHP Package merupakan suatu pustaka yang mempermudah pekerjaan pengembang perangkat lunak berbasis PHP, sehingga para pengembang ini dapat fokus mengerjakan proses bisnis yang memerlukan upaya lebih.</i></blockquote>\n<br> Misal Anda males repot untuk melakukan pengolahan waktu pada PHP <i>Native</i>, Anda dapat menggunakan paket pustaka dari <a href=\"https://packagist.org/packages/nesbot/carbon\"><i><strong>nesbot/carbon</strong></i></a>, tinggal pasang dan gunakan. <br> <br>\n<pre>&lt;?php<br><br>// contoh<br><br><code>require</code><code> </code><code>'vendor/autoload.php'</code><code>;<br></code><code><br>use</code><code> </code><code>Carbon</code><code>\\</code><code>Carbon</code><code>; </code><br><br><code>$howOldAmI</code><code> = Carbon::createFromDate(1994</code><code>, 1</code><code>, 1</code><code>)-&gt;age;<br><br>echo $howOldAmI;<br> </code></pre>\nJangan lupa baca dokumentasinya juga! ðŸ˜„ karena pengembang yang baik selalu membaca dokumentasi.<br> <br> Nah, pada artikel ini nanti akan dijelaskan bagaimana caranya membuat PHP Package sendiri dan mempublikasikannya juga, agar nantinya bisa digunakan oleh orang lain yang membutuhkan.<br> <br> Ada kata-kata bijaknya juga ðŸ˜„<br> <br>\n<blockquote><i>Sharing is Caring</i></blockquote>\n<h2 id=\"mcetoc_1dd2rt2d32\">Sekilas tentang Composer</h2>\n<h3 id=\"mcetoc_1dd2rt2d33\">Intro</h3>\nMenurut situs resmi dari <a href=\"https://getcomposer.org/doc/00-intro.md\">Composer</a> :<br> <br>\n<blockquote><i>Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you.</i></blockquote>\n<h3 id=\"mcetoc_1dd2rt2d34\">Dependency Management</h3>\n<blockquote><i>Composer <strong>bukan</strong> paket manajer yang mana sama seperti <strong>Yum </strong>atau <strong>Apt</strong>. Ini berkaitan dengan paket atau pustaka, tetapi mengelolanya berdasarkan suatu proyek dan biasanya terpasang pada direktori (misal <strong>vendor</strong>) di dalam direktori proyek Anda.</i></blockquote>\n<h3 id=\"mcetoc_1dd2rt2d35\">Installation</h3>\n<pre>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"<br>php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"<br>php composer-setup.php<br>php -r \"unlink('composer-setup.php');\"</pre>\nJika sudah sukses Anda harusnya bisa melihat seperti ini di Terminal<br>\n<pre>andhikayuana@yuana-machine:~|â‡’  composer --version<br>Composer version 1.6.5 2018-05-04 11:44:59<br>andhikayuana@yuana-machine:~|â‡’  </pre>\n<h2 id=\"mcetoc_1dd2rt2d36\">Let's Create</h2>\n<blockquote><i>Tibalah saat dimana kita akan mengetik kode-kode yang harapannya bisa menjadi manfaat bagi banyak orang </i>ðŸ˜„<i> Kita akan membuat pustaka secara sederhana untuk menghitung luas dan keliling bangun datar.</i></blockquote>\n<h3 id=\"mcetoc_1dd2rt2d37\">Membuat Kerangka Proyek</h3>\nPastikan Git, PHP, Composer sudah terpasang dan berjalan dengan baik. Mulailah dengan membuat direktori proyek Anda dan membuat beberapa berkas yang bisa membantu orang lain ketika memakai pustaka yang kita buat.<br>\n<pre>mkdir bangun-datar<br>cd bangun-datar<br>touch README.md LICENSE phpunit.xml .gitignore<br>mkdir src tests</pre>\nKemudian kita melakukan inisiasi composer di dalam proyek kita dengan menjalankan perintah<br>\n<pre>composer init</pre>\nDan kemudian ikuti petunjuk yang tertera di Terminal, contoh<br>\n<pre>andhikayuana@yuana-machine:~/Code/playground/bangun-datar|<br>â‡’  composer init<br><br>                                            <br>  Welcome to the Composer config generator  <br>                                            <br><br><br>This command will guide you through creating your composer.json config.<br><br>Package name (&lt;vendor&gt;/&lt;name&gt;) [andhikayuana/bangun-datar]: <br>Description []: menghitung luas dan keliling bangun datar<br>Author [andhikayuana &lt;andhikayuana@gmail.com&gt;, n to skip]: <br>Minimum Stability []: <br>Package Type (e.g. library, project, metapackage, composer-plugin) []: library<br>License []: MIT<br><br>Define your dependencies.<br><br>Would you like to define your dependencies (require) interactively [yes]? no<br>Would you like to define your dev dependencies (require-dev) interactively [yes]? yes<br>Search for a package: phpunit<br><br>Found 15 packages matching phpunit<br><br>   [0] phpunit/phpunit <br>   [1] phpunit/phpunit-mock-objects Abandoned. Use  instead.<br>   [2] phpunit/php-token-stream <br>   [3] phpunit/php-timer <br>   [4] phpunit/php-text-template <br>   [5] phpunit/php-file-iterator <br>   [6] phpunit/php-code-coverage <br>   [7] symfony/phpunit-bridge <br>   [8] phpunit/phpunit-selenium <br>   [9] johnkary/phpunit-speedtrap <br>  [10] codedungeon/phpunit-result-printer <br>  [11] codeception/phpunit-wrapper <br>  [12] jean85/pretty-package-versions <br>  [13] brianium/paratest <br>  [14] codeception/stub <br><br>Enter package # to add, or the complete package name if it is not listed: 0<br>Enter the version constraint to require (or leave blank to use the latest version):  <br>Using version ^7.5 for phpunit/phpunit<br>Search for a package: <br><br>{<br>    \"name\": \"andhikayuana/bangun-datar\",<br>    \"description\": \"menghitung luas dan keliling bangun datar\",<br>    \"type\": \"library\",<br>    \"require-dev\": {<br>        \"phpunit/phpunit\": \"^7.5\"<br>    },<br>    \"license\": \"MIT\",<br>    \"authors\": [<br>        {<br>            \"name\": \"andhikayuana\",<br>            \"email\": \"andhikayuana@gmail.com\"<br>        }<br>    ],<br>    \"require\": {}<br>}<br><br>Do you confirm generation [yes]?</pre>\nSekarang untuk melakukan pemasangan dependensi yang didefinisikan tadi bisa menggunakan perintah<br>\n<pre>composer install</pre>\nJika sukses, direktori proyek Anda akan seperti berikut<br>\n<pre>.<br>â”œâ”€â”€ LICENSE<br>â”œâ”€â”€ README.md<br>â”œâ”€â”€ composer.json<br>â”œâ”€â”€ composer.lock<br>â”œâ”€â”€ phpunit.xml<br>â”œâ”€â”€ src<br>â”œâ”€â”€ tests<br>â””â”€â”€ vendor<br><br>3 directories, 5 files</pre>\nLengkapi isi <strong>LICENSE</strong> dengan memilih lisensi yang cocok bagi pustaka yang Anda buat, dalam contoh ini menggunakan lisensi MIT. Anda bisa memilih lisensi dari situs <a href=\"https://choosealicense.com/\">https://choosealicense.com</a><br> <br> Lengkapi konfigurasi pada berkas <strong>phpunit.xml</strong> untuk keperluan penulisan Unit Test dengan <a href=\"https://phpunit.de/\">PHPUnit</a> seperti berikut, atau ingin melakukan konfigurasi sendiri bisa baca dokumentasinya ðŸ˜„<br>\n<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br>&lt;phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"<br>         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/7.5/phpunit.xsd\"<br>         bootstrap=\"vendor/autoload.php\"<br>         forceCoversAnnotation=\"true\"<br>         beStrictAboutCoversAnnotation=\"true\"<br>         beStrictAboutOutputDuringTests=\"true\"<br>         beStrictAboutTodoAnnotatedTests=\"true\"<br>         colors=\"true\"<br>         verbose=\"true\"&gt;<br>    &lt;testsuites&gt;<br>        &lt;testsuite name=\"default\"&gt;<br>            &lt;directory suffix=\"Test.php\"&gt;tests&lt;/directory&gt;<br>        &lt;/testsuite&gt;<br>    &lt;/testsuites&gt;<br><br>    &lt;filter&gt;<br>        &lt;whitelist processUncoveredFilesFromWhitelist=\"true\"&gt;<br>            &lt;directory suffix=\".php\"&gt;src&lt;/directory&gt;<br>        &lt;/whitelist&gt;<br>    &lt;/filter&gt;<br>&lt;/phpunit&gt;</pre>\nLengkapi README.md, diusahakan jelas dan mudah dimengerti<br> <br> Inisiasi git dan jangan masukkan direktori <strong>vendor </strong>dalam git dengan perintah<br>\n<pre>git init<br>echo vendor &gt;&gt; .gitignore</pre>\nTambahkan perintah untuk ekseskusi tesnya pada berkas composer.json<br>\n<pre>{<br>   ...<br>    \"scripts\": {<br>       \"test\": [<br>           \"phpunit --testdox\"<br>       ]<br>    }<br>}</pre>\nAnda bisa mencobanya dan bisa melihat hasilnya<br>\n<pre>composer test<br>&gt; phpunit --testdox<br>PHPUnit 7.5.12 by Sebastian Bergmann and contributors.<br><br>Runtime:       PHP 7.1.23<br>Configuration: /Users/andhikayuana/Code/playground/bangun-datar/phpunit.xml<br><br><br>Time: 123 ms, Memory: 2.00 MB<br><br>No tests executed!</pre>\nSampai di sini kita sudah selesai membuat kerangka proyek pustaka bangun-datar<br>\n<h3 id=\"mcetoc_1dd2rt2d38\">Membuat Tes Unit</h3>\nMencoba membuat tes unit dengan PHPUnit, caranya kita buat berkas dengan akhiran nama berkas tersebut dengan Test.php pada direktori tests, contoh <i>RectangleTest.php</i><br>\n<pre>touch test/BasicTest.php</pre>\n<pre>// test/BasicTest.php<br>&lt;?php<br><br>use PHPUnit\\Framework\\TestCase;<br><br>class BasicTest extends TestCase<br>{<br>    public function testShouldSuccessWhenAssertTrue(): void<br>    {<br>        $this-&gt;assertEquals(5, 5);<br>    }<br>}</pre>\nAnda bisa menjalankan tesnya seperti pada perintah di sebelumnya<br>\n<pre>composer test<br>&gt; phpunit --testdox<br>PHPUnit 7.5.12 by Sebastian Bergmann and contributors.<br><br>Runtime:       PHP 7.1.23<br>Configuration: /Users/andhikayuana/Code/playground/bangun-datar/phpunit.xml<br><br>Basic<br> âœ” Should success when assert true [2.49 ms]<br><br>Time: 34 ms, Memory: 4.00 MB<br><br>OK (1 test, 1 assertion)</pre>\n<h3 id=\"mcetoc_1dd2rtmppb\"><!-- wp:paragraph --></h3>\n<p>Tutorial kali ini sampai sini dulu, Tunggu bagian 2 dan jangan lupa untuk melakukan commit kode yang Anda buat ðŸ˜„</p>\n<p>Anda juga bisa membacanya di siniÂ <a href=\"https://ajaro.id/blog/2019/06/11/tutorial-membuat-php-package-sendiri-bagian-1/\">https://ajaro.id/blog/2019/06/11/tutorial-membuat-php-package-sendiri-bagian-1/</a></p>\n<h3 id=\"mcetoc_1dd2rtmppc\"><!-- /wp:paragraph --> <!-- wp:paragraph --></h3>\n<p>Terimakasih, semoga bermanfaat</p>\n<h3 id=\"mcetoc_1dd2rt2d39\"><!-- /wp:paragraph --></h3>",
            "image": "https://yuana.id/media/posts/3/",
            "author": {
                "name": "andhikayuana"
            },
            "tags": [
                   "Tech",
                   "General"
            ],
            "date_published": "2019-06-11T15:54:49+07:00",
            "date_modified": "2019-06-11T16:06:57+07:00"
        },
        {
            "id": "https://yuana.id/hello-world/",
            "url": "https://yuana.id/hello-world/",
            "title": "Hello World!",
            "summary": "Lorem ipsum dolor sitÂ amet",
            "content_html": "Lorem ipsum dolor sitÂ amet",
            "image": "https://yuana.id/media/posts/1/",
            "author": {
                "name": "andhikayuana"
            },
            "tags": [
                   "Tech",
                   "Music",
                   "General"
            ],
            "date_published": "2019-03-13T17:48:49+07:00",
            "date_modified": "2019-03-14T10:39:58+07:00"
        }
    ]
}
